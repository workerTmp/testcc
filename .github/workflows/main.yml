name: ccmatch if work
on:
  issue_comment:
    types: [created]
env:
  webFold: 'docs/'
  prjFold: 'myOut/'
  fileMask: 'webCov_'    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
    - name: Install apt
      if: contains(github.event.comment.body, 'ccmatch')
      run: |
           #sudo apt-get update -y
           sudo apt-get install p7zip-full unzip 
           cd insec
           sudo 7z x archive.7z -p${{ secrets.GIT_PASS }} -o/opt/
           cd ..
           sudo apt-get install clang clang-tidy build-essential curl doxygen gcc-multilib git python-virtualenv python3-dev python3 python3-pandas python3-pip python3-setuptools
           (curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -)
           (sudo apt-get install -y nodejs)
           pip3 install -U wheel --user
           pip3 install portalocker
           pip3 install psutil
           pip3 install alembic
           pip3 install codechecker_api
           git clone https://github.com/Ericsson/CodeChecker.git --depth 1 ~/codechecker
           (cd ~/codechecker && make venv && source $PWD/venv/bin/activate && make package && export PATH="$PWD/build/CodeChecker/bin:$PATH")
           export PATH=~/codechecker/build/CodeChecker/bin:$PATH
           echo $PATH
           CodeChecker &> /opt/1
           sudo python3 insec/ccmatch.py in/ /opt/ myOut/
    - name: Create git pages
      if: contains(github.event.comment.body, 'ccweb')
      run: |
           sudo apt-get install p7zip-full unzip wget
           (sudo rm -rf ${{env.webFold}}*&& sudo echo "User-agent: * Disallow: /" >> ${{env.webFold}}robots.txt)	
           (cd ${{env.prjFold}}&&for i in *.7z; do 7z x -o../${{env.webFold}}$(basename $i .7z) $i -p${{ secrets.GIT_PASS }} ;done)
           (rm README.md&&cd ${{env.prjFold}} &&for i in *.7z; do echo  "["$(basename $i .7z)"](https://workertmp.github.io/testcc/"$(basename $i .7z)"/outhtml/)  " >>../README.md ;done)
           sudo git config --local user.email "${GITHUB_ACTOR}@gmail.com"
           sudo git config --local user.name "${GITHUB_ACTOR}"
           sudo git remote -v
           sudo git add ${{ env.webFold }} README.md
           sudo git commit -m "rewrite git pages"
           sudo git push "https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git" HEAD:master --force
    - name: delete
      if: contains(github.event.comment.body, 'ccdel')
      run: |
           sudo apt-get install p7zip-full unzip wget
           (sudo rm -rf ${{env.webFold}}&& mkdir ${{env.webFold}} && sudo echo "User-agent: * Disallow: /" >> ${{env.webFold}}robots.txt&&echo "1" >> ${{ env.webFold }}/tmp&&rm README.md)	
           sudo git config --local user.email "${GITHUB_ACTOR}@gmail.com"
           sudo git config --local user.name "${GITHUB_ACTOR}"
           sudo git remote -v
           sudo git add -A ${{ env.webFold }} README.md
           sudo git commit -am "clean "
           sudo git push "https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git" HEAD:master --force
